#!/bin/bash

declare -A DATA=( 
[ "-2345.67 8765.43 -1234.56 5678.91 -9876.54 3456.78 -7654.32 1987.65 -4321.09 6543.21" ]="6543.21 -4321.09 1987.65 -7654.32 3456.78 -9876.54 5678.91 -1234.56 8765.43 -2345.67" \
[ "9123.45 -8234.56 7345.67 -6456.78 5567.89 -4678.90 3789.01 -2890.12 1991.23 -1092.34" ]="-1092.34 1991.23 -2890.12 3789.01 -4678.90 5567.89 -6456.78 7345.67 -8234.56 9123.45" \
[ "-1598.76 2679.87 -3760.98 4851.09 -5942.10 6033.21 -7124.32 8215.43 -9306.54 1497.65" ]="1497.65 -9306.54 8215.43 -7124.32 6033.21 -5942.10 4851.09 -3760.98 2679.87 -1598.76" \
[ "7823.12 -6914.23 5005.34 -4196.45 3287.56 -2378.67 1469.78 -560.89 -348.00 1239.11" ]="1239.11 -348.00 -560.89 1469.78 -2378.67 3287.56 -4196.45 5005.34 -6914.23 7823.12" \
[ "-8456.78 9567.89 -6678.90 7789.01 -4890.12 5901.23 -3012.34 4123.45 -1234.56 2345.67" ]="2345.67 -1234.56 4123.45 -3012.34 5901.23 -4890.12 7789.01 -6678.90 9567.89 -8456.78" \
[ "1234.56 -2345.67 3456.78 -4567.89 5678.90 -6789.01 7890.12 -8901.23 9012.34 -123.45" ]="-123.45 9012.34 -8901.23 7890.12 -6789.01 5678.90 -4567.89 3456.78 -2345.67 1234.56" \
[ "-9123.45 8234.56 -7345.67 6456.78 -5567.89 4678.90 -3789.01 2890.12 -1991.23 1092.34" ]="1092.34 -1991.23 2890.12 -3789.01 4678.90 -5567.89 6456.78 -7345.67 8234.56 -9123.45" \
[ "4567.89 -5678.90 6789.01 -7890.12 8901.23 -9012.34 123.45 -234.56 345.67 -456.78" ]="-456.78 345.67 -234.56 123.45 -9012.34 8901.23 -7890.12 6789.01 -5678.90 4567.89" \
[ "-7823.12 6914.23 -5005.34 4196.45 -3287.56 2378.67 -1469.78 560.89 348.00 -1239.11" ]="-1239.11 348.00 560.89 -1469.78 2378.67 -3287.56 4196.45 -5005.34 6914.23 -7823.12" \
[ "1598.76 -2679.87 3760.98 -4851.09 5942.10 -6033.21 7124.32 -8215.43 9306.54 -1497.65" ]="-1497.65 9306.54 -8215.43 7124.32 -6033.21 5942.10 -4851.09 3760.98 -2679.87 1598.76")
IFS='[] '
for item in "${!DATA[@]}";
do
    echo "INPUT: \"$item\". OUTPUT MUST BE: \"${DATA[$item]}\""
    RESULT="$(echo "${item}" | ./bin/exercise2 | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//')"
    EXPECTED="${DATA[$item]}"

    for ((i=0; i<10; i++));
    do
        read -r -a array1 <<< "$EXPECTED"
        read -r -a array2 <<< "$RESULT"

        ERROR=$(echo "${array1[$i]}-(${array2[$i]})" | bc -l)
        if [ "$(echo "${ERROR#-}"'>'0.01 | bc -l)" -ne 0 ]; then
            echo "Test fail. Expected: \"$EXPECTED\". Actual: \"$RESULT\"."
            exit 1
        fi
    done

    echo "Test succesed"
    
done

exit 0